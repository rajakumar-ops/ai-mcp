# Default values for web-pentest-mcp
# This is a YAML-formatted file.

replicaCount: 1

image:
  repository: web-pentest-mcp-server
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    add:
      - NET_RAW
    drop:
      - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: web-pentest-mcp.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: web-pentest-mcp-tls
  #    hosts:
  #      - web-pentest-mcp.local

resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# MCP Server Configuration
mcp:
  # Server name for MCP protocol
  serverName: "web-pentest"
  # Transport type (stdio, tcp, etc.)
  transport: "stdio"
  # Log level
  logLevel: "INFO"
  # Timeout for tool execution (seconds)
  toolTimeout: 300

# Security Configuration
security:
  # Enable network security policies
  networkPolicy:
    enabled: false
  # Pod security standards
  podSecurityStandards:
    enabled: true
  # Security context constraints
  scc:
    enabled: false

# Monitoring Configuration
monitoring:
  # Enable Prometheus metrics
  prometheus:
    enabled: false
    port: 9090
    path: /metrics
  # Enable health checks
  healthCheck:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

# Persistence Configuration
persistence:
  enabled: false
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 1Gi

# Environment Variables
env:
  - name: PYTHONUNBUFFERED
    value: "1"
  - name: LOG_LEVEL
    value: "INFO"
  - name: MCP_SERVER_NAME
    value: "web-pentest"

# Additional environment variables
extraEnv: []
  # - name: CUSTOM_VAR
  #   value: "custom-value"

# ConfigMap for additional configuration
configMap:
  enabled: true
  data: {}
    # custom.config: "value"

# Secrets for sensitive data
secrets:
  enabled: false
  data: {}
    # api-key: "base64-encoded-value"

# Pod Disruption Budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  # maxUnavailable: 1

# Horizontal Pod Autoscaler
hpa:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Network Policies
networkPolicy:
  enabled: false
  ingress: []
  egress: []
  policyTypes:
    - Ingress
    - Egress

# Service Monitor for Prometheus
serviceMonitor:
  enabled: false
  interval: 30s
  scrapeTimeout: 10s
  labels: {}
  annotations: {}

# Pod Monitor for Prometheus
podMonitor:
  enabled: false
  interval: 30s
  scrapeTimeout: 10s
  labels: {}
  annotations: {}
